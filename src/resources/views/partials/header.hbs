<div style="position:fixed;top:0;z-index:1000;box-shadow:0 2px 5px rgba(0, 0, 0, 0.1);display:flex;justify-content:flex-start;
  align-items:center;padding:10px 100px;background-color:#f77748;width:100%;">

  <div style="margin-right: auto;">
    <h1 style="margin: 0;cursor: pointer;font-weight:bold;color: whitesmoke;"><a href="/">Trang chủ</a></h1>
  </div>

  <ul class="ul-header"
    style="display: flex; align-items: center; margin: 0 auto; gap: 10px; list-style-type: none; font-weight: 400;margin-left:60px">
    <li class="header-items"><a class="dropdown-item dropdown-item-header" style="color: whitesmoke;font-weight: 500;"
        href="/top">Mua nhiều nhất</a>
    </li>
    <li class="header-items"><a class="dropdown-item dropdown-item-header" style="color: whitesmoke;font-weight: 500;"
        href="/product/category/1">Giỏ trái cây</a>
    </li>
    <li class="header-items"><a class="dropdown-item dropdown-item-header" style="color: whitesmoke;font-weight: 500;"
        href="/product/category/2">Trái cây</a>
    </li>
    <li class="header-items"><a class="dropdown-item dropdown-item-header" style="color: whitesmoke;font-weight: 500;"
        href="/product/category/3">Rau củ</a>
    </li>

  </ul>

  <div style="display: flex; align-items: center; gap: 15px;">
    <form action="/search" id="form-search">
      <div style="position: relative;">
        <input id="search-input" type="search" placeholder="Bạn đang tìm gì?" aria-label="Search" name="text"
          style="width: 200px; padding: 5px 30px 5px 10px; border-radius: 3px; border: 1px solid #ccc; outline: none;">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search"
          viewBox="0 0 16 16"
          style="position: absolute; right: 10px; top: 50%; transform: translateY(-50%); cursor: pointer;"
          onclick="handleSearch()">
          <path
            d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
        </svg>
      </div>
    </form>


    <div class="dropdown" style="margin-right:-7px">
      <button class="btn dropdown-toggle-header" type="button" id="dropdownMenuButton4" data-bs-toggle="dropdown"
        aria-expanded="false" aria-label="Open user menu"
        style="background: none; border: none; color: inherit; cursor: pointer; padding: 0;color: whitesmoke">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-person"
          viewBox="0 0 16 16">
          <path
            d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6m2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0m4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4m-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10s-3.516.68-4.168 1.332c-.678.678-.83 1.418-.832 1.664z" />
        </svg>
      </button>
      <ul class="dropdown-menu dropdown-menu-header" id="user-dropdown" aria-labelledby="dropdownMenuButton4">

      </ul>

    </div>


    <button class="btn-cart" id="cartButton"
      style="background: none; border: none; cursor: pointer; margin-top: -4px; color: whitesmoke; position: relative;">
      <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-cart4"
        viewBox="0 0 16 16">
        <path
          d="M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5M3.14 5l.5 2H5V5zM6 5v2h2V5zm3 0v2h2V5zm3 0v2h1.36l.5-2zm1.11 3H12v2h.61zM11 8H9v2h2zM8 8H6v2h2zM5 8H3.89l.5 2H5zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2m-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0m9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2m-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0" />
      </svg>
    </button>

    <!-- Cart Dropdown -->
    <div id="cartDropdown" style=" display: none;position: absolute; top: 60px;right: 90px;width: 400px;background: white;
     border: 1px solid rgb(221, 221, 221);padding: 10px; box-shadow: rgba(0, 0, 0, 0.2) 0px 4px 8px;
     border-radius: 5px; z-index: 100;max-height: 500px; overflow-y: auto; padding-right: 5px;">
      <p style="margin: 0; font-weight: bold;text-align:center;color:#fb662f">Giỏ hàng</p>
      <div id="cartItems">
        <hr style="border: none; border-top: 1px solid #ccc; margin: 10px 0;">
        <div style="display: flex; align-items: center; justify-content: center; gap: 8px;">
          <i class="fas fa-box-open" style="font-size: 18px; color: #525252;"></i>
          <p style="font-size: 14px; margin: 0;">Chưa có sản phẩm</p>
        </div>
      </div>
    </div>
  </div>

</div>

<script>
  function handleSearch() {
    const searchInput = document.getElementById('search-input');
    const searchTerm = searchInput.value.trim();
    const form = document.getElementById('form-search');
    if (!searchTerm) {
      alert('Vui lòng nhập nội dung tìm kiếm!');
    } else {
      // Redirect to a new URL with the search term as a query parameter
      form.submit()
    }
  }

  document.addEventListener("DOMContentLoaded", async () => {
    let dropdown = document.getElementById("user-dropdown");
    const token = localStorage.getItem("token");

    if (!token) {
      dropdown.innerHTML = `
            <li><a class="dropdown-item dropdown-item-header" href="/account/login">Đăng nhập</a></li>
            <li><a class="dropdown-item dropdown-item-header" href="/account/signup">Đăng kí</a></li>
        `;
      return;
    }

    fetch("http://localhost:10000/account/getInfo", {
      method: "GET",
      headers: {
        "Authorization": `Bearer ${token}`,
        "Content-Type": "application/json",
      }
    })
      .then(async (response) => {
        if (!response.ok) {
          throw new Error("Không thể lấy thông tin tài khoản");
        }
        const data = await response.json();

        dropdown.innerHTML = `
            <li><a class="dropdown-item dropdown-item-header" href="/account/user">${data.username}</a></li>
            <li><a class="dropdown-item dropdown-item-header" href="/account/logout" onclick="logout()">Đăng xuất</a></li>
        `;

        if (data.role === "admin") {
          dropdown.innerHTML = `<li><a class="dropdown-item dropdown-item-header" href="/admin/product">Quản lý</a></li>` + dropdown.innerHTML;
        }
      })
      .catch(() => {
        dropdown.innerHTML = `
            <li><a class="dropdown-item dropdown-item-header" href="/account/login">Đăng nhập</a></li>
            <li><a class="dropdown-item dropdown-item-header" href="/account/signup">Đăng kí</a></li>
        `;
      });

    const cartItems = document.getElementById("cartItems");

  });
  async function xoa(cart_id) {
    const token = localStorage.getItem("token");
    try {
      const response = await fetch(`http://localhost:3003/cart/${cart_id}`, {
        method: "DELETE",
        headers: {
          "Authorization": `Bearer ${token}`,
        }
      })
      if (!response.ok) {
        const errorMessage = await deleteResponse.json();
        console.log(errorMessage);
      }

      // Cập nhật giỏ hàng sau khi xóa
      await updateCart();
    } catch (error) {
      console.error("Lỗi khi xóa sản phẩm:", error.message);
    }
  }

  //Cập nhật giỏ hàng
  async function updateCart() {
    const cartItems = document.getElementById("cartItems");
    const token = localStorage.getItem("token");
    fetch("http://localhost:3003/cart", {
      method: "GET",
      headers: {
        "Authorization": `Bearer ${token}`,
      }
    })
      .then(async (response) => {
        const data = await response.json();
        return { items: data.cartItems, sum: data.sum };
      })
      .then(({ items, sum }) => {
        cartItems.innerHTML = "";
        if (items.length === 0) {
          cartItems.innerHTML = `<hr style="border: none; border-top: 1px solid #ccc; margin: 10px 0;">
                                  <div style="display: flex; align-items: center; justify-content: center; gap: 8px;">
                                      <i class="fas fa-box-open" style="font-size: 18px; color: #525252;"></i>
                                      <p style="font-size: 14px; margin: 0;">Chưa có sản phẩm</p>
                                  </div>`;
          return;
        }
        items.forEach(item => {
          const div = document.createElement("div");
          div.classList.add("cart-item");
          div.innerHTML = `
            <div  style="text-decoration: none; color: inherit;border: none; background: #fff;
                            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1); margin-top: 10px;border-radius: 10px;padding:3px;position: relative;">
                        <div class="row g-0 h-100">
                            <a href="/product/${item.product_id}" class="col-md-4 d-flex justify-content-center align-items-center;">
                                <img src="${item.mainImg}" class="img-fluid" alt="Image" style="height: 100px; width: auto; object-fit: fill; border-radius: 0; border: none;">
                            </a>
                            <div class="col-md-8">
                                <div class="card-body text-start" style="padding: 5px; height: 100px; display: flex; flex-direction: column; justify-content: center;">
                                    <h5 class="card-title"
                                        style="display: -webkit-box; -webkit-line-clamp: 1; -webkit-box-orient: vertical; overflow: hidden; text-overflow: ellipsis; white-space: normal; margin: 0;
                                        text-align: left; font-size: 15px;margin-bottom: 5px;margin-top:5px;font-weight: 600;">
                                        ${item.name}
                                    </h5>
                                    <div style="display:flex;justify-content:space-between">
                                    <p class="card-text" style="margin-top: 10px; text-align: center; font-size: 12px;">
                                        <span style="color: red;font-size: 13px;font-weight: 600;">${item.price.toLocaleString('vi-VN')}₫</span>
                                    </p>
                                    <div class="quantity-container" style="display: flex;justify-content: center;align-items: center;gap: 3px;margin-top:0px;margin-top: -11px;margin-right: 15px;">
                                        <button type="button" class="quantity-btn" onclick="decrementQuantityCart(${item.cart_id},${item.product_id})" style="width: 20px; height: 20px; padding: 0;font-size: 12px;">-</button>
                                        <div style="display: flex; align-items: center; justify-content: center; height: 20px;">
                                            <input type="number" id="${item.cart_id}" name="soluong" value="${item.quantity}" min="1" max="10" readonly 
                                                style="width: 30px; height: 20px; font-size: 12px; text-align: right; line-height: 20px; padding: 0;">
                                        </div>
                                        <button type="button" class="quantity-btn" onclick="incrementQuantityCart(${item.cart_id},${item.product_id})" style="width: 20px;height: 20px;padding: 0;font-size: 12px;">+</button>
                                    </div>
                                    </div>
                                    
                                </div>
                            </div>
                            <i class="bi bi-x"  onclick=xoa(${item.cart_id})></i>
                        </div>
                    </div>
        `;
          cartItems.appendChild(div);
        });
        const tongGia = document.createElement("div");
        tongGia.innerHTML = `
            <div style="display:flex; justify-content:space-between; padding: 10px;margin-top:5px">
                <p style="font-weight:400;">Tổng giá:</p>
                <p style="color: red;font-weight:600;">${sum.toLocaleString('vi-VN')}₫</p>
            </div>
            <button type="button" class="button-27" 
                  style="width: 98%; margin-left: 4px; margin-top: -5px; display: flex; align-items: center; justify-content: center; gap: 8px;" 
                  onclick="checkOut()">
                <i class="bi bi-credit-card" style="font-size: 20px;"></i> 
                <span>Thanh toán</span>
            </button>
            `;

        cartItems.appendChild(tongGia);
      })
      .catch((error) => {
        const empty = document.createElement("div");
        cartItems.innerHTML = ""
        empty.innerHTML = `
          <hr style="border: none; border-top: 1px solid #ccc; margin: 10px 0;">
          <div style="display: flex; align-items: center; justify-content: center; gap: 8px;">
              <i class="fas fa-box-open" style="font-size: 18px; color: #525252;"></i>
              <p style="font-size: 14px; margin: 0;">Chưa có sản phẩm</p>
          </div>
      `;
        cartItems.appendChild(empty);

        console.error("Lỗi:", error);
      });
  }

  // Hàm đăng xuất
  async function logout() {
    localStorage.removeItem("token");
  }

  function checkOut() {
    window.location.href = "/checkout";
  }
  const cartButton = document.getElementById("cartButton");
  const cartDropdown = document.getElementById("cartDropdown");

  // Toggle cart dropdown visibility
  cartButton.addEventListener("click", function (event) {
    event.stopPropagation(); // Prevent click from closing immediately
    cartDropdown.style.display = cartDropdown.style.display === "block" ? "none" : "block";
  });

  // Hide dropdown when clicking outside
  //document.addEventListener("click", function (event) {
  //  if (!cartButton.contains(event.target) && !cartDropdown.contains(event.target)) {
  //    cartDropdown.style.display = "none";
  //  }
  //});

  function incrementQuantityCart(cart_id, product_id) {
    let quantityInput = document.getElementById(cart_id);
    let currentValue = parseInt(quantityInput.value);
    if (currentValue < 10) {
      quantityInput.value = currentValue + 1;
      updateCartProduct(cart_id, parseInt(quantityInput.value), product_id)
    }
  }

  function decrementQuantityCart(cart_id, product_id) {
    let quantityInput = document.getElementById(cart_id);
    let currentValue = parseInt(quantityInput.value);
    if (currentValue > 1) {
      quantityInput.value = currentValue - 1;
      updateCartProduct(cart_id, parseInt(quantityInput.value), product_id)
    }
  }

  async function updateCartProduct(cart_id, quantity, product_id) {
    const token=localStorage.getItem("token");
    try {
      let formData = {
        product_id: product_id,
        quantity: quantity
      };

      const response = await fetch(`http://localhost:3003/cart/${cart_id}`, {
        method: "PATCH",
        headers: {
          "Authorization": `Bearer ${token}`,
          "Content-Type": "application/json"
        },
        body: JSON.stringify(formData)
      });

      const data = await response.json();

      if (data.message === "Vui lòng đăng nhập!") {
        document.getElementById("alert-text").innerHTML = "Vui lòng đăng nhập!";
        $("#alertModal").modal("show");

        $("#alertModal").on("hidden.bs.modal", function () {
          window.location.href = "/account/login";
        });
        return; // Không gọi updateCart nếu chưa đăng nhập
      }
      else if(data.message !="Cập nhật thành công!") {
        document.getElementById("alert-text").innerHTML = data.message;
        $("#alertModal").modal("show");
      }
      await updateCart();
    } catch (error) {
      console.error("Lỗi fetch API:", error);
    }
  }

</script>